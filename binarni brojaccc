#include "stm32f10x.h"                  // Device header
int t=3000000;
void delay()
{
	for(int i=0;i<t;i++)
	{}
}
int main()
{
	RCC->APB2ENR |=(1<<2);
	GPIOA->CRL &=~ GPIO_CRL_CNF;
	GPIOA->CRL |=((1<<0) | (1<<1));
	GPIOA->CRL |=((1<<4) | (1<<5));
	GPIOA->CRL |=((1<<8) | (1<<9));
	GPIOA->CRL |=((1<<12) | (1<<13));
	GPIOA->CRL |=((1<<16) | (1<<17));
	GPIOA->CRL |=((1<<20) | (1<<21));
	GPIOA->CRL |=((1<<24) | (1<<25));
	GPIOA->CRL |=((1<<28) | (1<<29));
	
	/*while(1)
	{
		for(int i=16;i<=24;i++)
		GPIOA->BSRR=(1<<i);
		//for(int i=0;i<=7;i++)
		//delay();
		//1 I 2
		for(int i=0;i<=7;i++)
		GPIOA->BSRR=(1<<i);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BSRR=(1<<i);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BSRR=(1<<i);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BSRR=(1<<i);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
		//3 I 4
		GPIOA->BSRR=(1<<7);
		delay();
		GPIOA->BSRR=(1<<6);
		delay();
		GPIOA->BSRR=(1<<5);
		delay();
		GPIOA->BSRR=(1<<4);
		delay();
		GPIOA->BSRR=(1<<3);
		delay();
		GPIOA->BSRR=(1<<2);
		delay();
		GPIOA->BSRR=(1<<1);
		delay();
		GPIOA->BSRR=(1<<0);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
		GPIOA->BSRR=(1<<0);
		delay();
		GPIOA->BSRR=(1<<1);
		delay();
		GPIOA->BSRR=(1<<2);
		delay();
		GPIOA->BSRR=(1<<3);
		delay();
		GPIOA->BSRR=(1<<4);
		delay();
		GPIOA->BSRR=(1<<5);
		delay();
		GPIOA->BSRR=(1<<6);
		delay();
		GPIOA->BSRR=(1<<7);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
		
		//5 I 6
		GPIOA->BSRR=(1<<7);
		delay();
		GPIOA->BRR=(1<<7);
		delay();
		GPIOA->BSRR=(1<<6);
		delay();
		GPIOA->BRR=(1<<6);
		delay();
		GPIOA->BSRR=(1<<5);
		delay();
		GPIOA->BRR=(1<<5);
		delay();
		GPIOA->BSRR=(1<<4);
		delay();
		GPIOA->BRR=(1<<4);
		delay();
		GPIOA->BSRR=(1<<3);
		delay();
		GPIOA->BRR=(1<<3);
		delay();
		GPIOA->BSRR=(1<<2);
		delay();
		GPIOA->BRR=(1<<2);
		delay();
		GPIOA->BSRR=(1<<1);
		delay();
		GPIOA->BRR=(1<<1);
		delay();
		GPIOA->BSRR=(1<<0);
		delay();
		GPIOA->BRR=(1<<0);
		delay();
		GPIOA->BSRR=(1<<0);
		delay();
		GPIOA->BRR=(1<<0);
		delay();
		GPIOA->BSRR=(1<<1);
		delay();
		GPIOA->BRR=(1<<1);
		delay();
		GPIOA->BSRR=(1<<2);
		delay();
		GPIOA->BRR=(1<<2);
		delay();
		GPIOA->BSRR=(1<<3);
		delay();
		GPIOA->BRR=(1<<3);
		delay();
		GPIOA->BSRR=(1<<4);
		delay();
		GPIOA->BRR=(1<<4);
		delay();
		GPIOA->BSRR=(1<<5);
		delay();
		GPIOA->BRR=(1<<5);
		delay();
		GPIOA->BSRR=(1<<6);
		delay();
		GPIOA->BRR=(1<<6);
		delay();
		GPIOA->BSRR=(1<<7);
		delay();
		GPIOA->BRR=(1<<7);
		delay();
		
		//7 I 8
		GPIOA->BSRR=(1<<3);
		GPIOA->BSRR=(1<<4);
		delay();
		GPIOA->BSRR=(1<<2);
		GPIOA->BSRR=(1<<5);
		delay();
		GPIOA->BSRR=(1<<1);
		GPIOA->BSRR=(1<<6);
		delay();
		GPIOA->BSRR=(1<<0);
		GPIOA->BSRR=(1<<7);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
		GPIOA->BSRR=(1<<7);
		GPIOA->BSRR=(1<<0);
		delay();
		GPIOA->BSRR=(1<<6);
		GPIOA->BSRR=(1<<1);
		delay();
		GPIOA->BSRR=(1<<5);
		GPIOA->BSRR=(1<<2);
		delay();
		GPIOA->BSRR=(1<<4);
		GPIOA->BSRR=(1<<3);
		delay();
		for(int i=0;i<=7;i++)
		GPIOA->BRR=(1<<i);
		delay();
	t=t-500000;
	if(t<250000)
	{
		t=3000000;
	}*/
/*	void delay()
{
	for(int i=0;i<t;i++)
	{}
}*/

	
for(int i=0;i<256;i++)
{
	if(i%2){ GPIOA->BSRR=GPIO_BSRR_BS0;}else { GPIOA->BSRR=GPIO_BSRR_BR0;}
	for(int i=0;i<=300000;i++);
	if(i/2%2){ GPIOA->BSRR=GPIO_BSRR_BS1;}else { GPIOA->BSRR=GPIO_BSRR_BR1;}
for(int i=0;i<=300000;i++);
if(i/4%2){ GPIOA->BSRR=GPIO_BSRR_BS2;}else { GPIOA->BSRR=GPIO_BSRR_BR2;}
for(int i=0;i<=300000;i++);
if(i/8%2){ GPIOA->BSRR=GPIO_BSRR_BS3;}else { GPIOA->BSRR=GPIO_BSRR_BR3;}
for(int i=0;i<=300000;i++);
if(i/16%2){ GPIOA->BSRR=GPIO_BSRR_BS4;}else { GPIOA->BSRR=GPIO_BSRR_BR4;}
for(int i=0;i<=300000;i++);
if(i/32%2){ GPIOA->BSRR=GPIO_BSRR_BS5;}else { GPIOA->BSRR=GPIO_BSRR_BR5;}
for(int i=0;i<=300000;i++);
if(i/64%2){ GPIOA->BSRR=GPIO_BSRR_BS6;}else { GPIOA->BSRR=GPIO_BSRR_BR6;}
for(int i=0;i<=300000;i++);
if(i/108%2){ GPIOA->BSRR=GPIO_BSRR_BS7;}else { GPIOA->BSRR=GPIO_BSRR_BR7;}
	for(int i=0;i<=300000;i++);
}
	
	
	
	
}
